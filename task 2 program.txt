1. If 5 children code 5 pages in 5 minutes, how many children are needed to code 100 lines in 100 minutes?
ans. Here 5 children de 5 pages in 5 minutes , so each child take 5 minutes
    each child can code 100/5=20 pages in 100 minutes
    100/20=5, therefor we need 5 children to code 100 lines in 100 minutes

2. If the probability of an event occurring is 0.20, what are the odds against the event?
ans. the probability of an event occurring = p(e)
     the probability of not event occurring = p(not e)
    p(not e)= 1-0.20= 0.80
     odds against=0.80/0.20=4
   So, the odds against the event are 4 to 1

3. If all P are Q and some Q are R, which of the following statements is definitely true?
ans. All P are Q

4. A shopkeeper bought a set of 50 pens for 400 Rs. He sold each pen at 10 Rs. What was his percentage profit?
ans. total cost of 50 pens =400
     cost of per pen = total cost/total pen= 400/50=8 Rs
     shopkeeper sold each pen at 10 Rs
      the profit is 2 Rs    
     total profit = 2×50=100
Percentage profit=(100/400)×100%=25%

So, the shopkeeper's percentage profit was 25%.

5.  A mother is twice as old as her daughter. Five years ago, the mother's age was three times the daughter's age. If the father is four years older than the mother, what are the
current ages of the mother, father, and daughter?

ans. Mother's age: 20 years
Father's age: 24 years
Daughter's age: 10 years

6. Write a function that returns the n-th number in the Fibonacci sequence. The Fibonacci sequence starts with 0 and 1, and each subsequent number is the sum of the previous two numbers 
ans. #include <stdio.h>

int fibonacci(int n) {
    if (n <= 0) return 0; 
    if (n == 1) return 1;     
    int a = 0, b = 1;
    int next;

    for (int i = 2; i <= n; i++) {
        next = a + b;
        a = b;
        b = next;
    }

    return b;
}

int main() {
    int n;
    printf("Enter the position of the Fibonacci number you want: ");
    scanf("%d", &n);

    printf("The %d-th Fibonacci number is: %d\n", n, fibonacci(n));

    return 0;
}

7. Write a function that takes an integer and returns the sum of its digits. For example, given the number 123, the sum of its digits is 1 + 2 + 3 = 6.
ans. #include <stdio.h>

int sumOfDigits(int number) {
    int sum = 0;
    while (number != 0) {
        sum += number % 10;  
        number /= 10;          }
    return sum;
}

int main() {
    int number;
    printf("Enter an integer: ");
    scanf("%d", &number);

    int result = sumOfDigits(number);
    printf("The sum of the digits of %d is: %d\n", number, result);

    return 0;
}
 
8.Write a program to give an output of a pyramid like structure using the character input given by the user.
ans. #include <stdio.h>

void printPyramid(int rows, char ch) {
    for (int i = 1; i <= rows; i++) {
        
        for (int j = i; j < rows; j++) {
            printf(" ");
        }
                for (int k = 1; k <= (2 * i - 1); k++) {
            printf("%c", ch);
        }
                printf("\n");
    }
}

int main() {
    int rows;
    char ch;

   
    printf("Enter the number of rows for the pyramid: ");
    scanf("%d", &rows);

   
    printf("Enter the character to be used in the pyramid: ");
    scanf(" %c", &ch);

    printPyramid(rows, ch);

    return 0;
}

9.Given a string s, write a function to generate all possible permutations of the string.
ans. #include <stdio.h>
#include <string.h>

void swap(char *x, char *y) {
    char temp = *x;
    *x = *y;
    *y = temp;
}

void permute(char *str, int l, int r) {
    if (l == r) {
        printf("%s\n", str);
    } else {
        for (int i = l; i <= r; i++) {
            swap((str + l), (str + i));        
            permute(str, l + 1, r);           
            swap((str + l), (str + i));       
        }
    }
}

int main() {
    char str[100];

    printf("Enter a string: ");
    scanf("%s", str);

    int n = strlen(str);
    printf("All possible permutations are:\n");
    permute(str, 0, n - 1);

    return 0;
}



